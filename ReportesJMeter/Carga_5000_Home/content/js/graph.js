/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 439.0, "minX": 0.0, "maxY": 21579.0, "series": [{"data": [[0.0, 439.0], [0.1, 444.0], [0.2, 448.0], [0.3, 459.0], [0.4, 462.0], [0.5, 469.0], [0.6, 471.0], [0.7, 475.0], [0.8, 479.0], [0.9, 484.0], [1.0, 486.0], [1.1, 492.0], [1.2, 496.0], [1.3, 502.0], [1.4, 505.0], [1.5, 509.0], [1.6, 513.0], [1.7, 522.0], [1.8, 542.0], [1.9, 550.0], [2.0, 554.0], [2.1, 559.0], [2.2, 568.0], [2.3, 579.0], [2.4, 587.0], [2.5, 599.0], [2.6, 607.0], [2.7, 614.0], [2.8, 620.0], [2.9, 628.0], [3.0, 635.0], [3.1, 641.0], [3.2, 649.0], [3.3, 658.0], [3.4, 662.0], [3.5, 666.0], [3.6, 673.0], [3.7, 678.0], [3.8, 683.0], [3.9, 687.0], [4.0, 691.0], [4.1, 695.0], [4.2, 713.0], [4.3, 737.0], [4.4, 753.0], [4.5, 770.0], [4.6, 783.0], [4.7, 787.0], [4.8, 792.0], [4.9, 800.0], [5.0, 819.0], [5.1, 824.0], [5.2, 833.0], [5.3, 837.0], [5.4, 846.0], [5.5, 858.0], [5.6, 863.0], [5.7, 882.0], [5.8, 887.0], [5.9, 904.0], [6.0, 907.0], [6.1, 912.0], [6.2, 917.0], [6.3, 920.0], [6.4, 926.0], [6.5, 932.0], [6.6, 937.0], [6.7, 945.0], [6.8, 949.0], [6.9, 955.0], [7.0, 957.0], [7.1, 964.0], [7.2, 967.0], [7.3, 973.0], [7.4, 976.0], [7.5, 982.0], [7.6, 985.0], [7.7, 989.0], [7.8, 992.0], [7.9, 998.0], [8.0, 1011.0], [8.1, 1019.0], [8.2, 1025.0], [8.3, 1036.0], [8.4, 1046.0], [8.5, 1061.0], [8.6, 1067.0], [8.7, 1071.0], [8.8, 1077.0], [8.9, 1083.0], [9.0, 1091.0], [9.1, 1098.0], [9.2, 1101.0], [9.3, 1105.0], [9.4, 1110.0], [9.5, 1116.0], [9.6, 1128.0], [9.7, 1135.0], [9.8, 1141.0], [9.9, 1143.0], [10.0, 1145.0], [10.1, 1149.0], [10.2, 1153.0], [10.3, 1155.0], [10.4, 1166.0], [10.5, 1170.0], [10.6, 1177.0], [10.7, 1179.0], [10.8, 1182.0], [10.9, 1185.0], [11.0, 1187.0], [11.1, 1190.0], [11.2, 1193.0], [11.3, 1194.0], [11.4, 1199.0], [11.5, 1201.0], [11.6, 1206.0], [11.7, 1210.0], [11.8, 1212.0], [11.9, 1219.0], [12.0, 1222.0], [12.1, 1228.0], [12.2, 1231.0], [12.3, 1234.0], [12.4, 1236.0], [12.5, 1237.0], [12.6, 1239.0], [12.7, 1242.0], [12.8, 1245.0], [12.9, 1250.0], [13.0, 1255.0], [13.1, 1260.0], [13.2, 1266.0], [13.3, 1272.0], [13.4, 1275.0], [13.5, 1277.0], [13.6, 1282.0], [13.7, 1287.0], [13.8, 1292.0], [13.9, 1297.0], [14.0, 1299.0], [14.1, 1306.0], [14.2, 1311.0], [14.3, 1317.0], [14.4, 1327.0], [14.5, 1336.0], [14.6, 1338.0], [14.7, 1345.0], [14.8, 1348.0], [14.9, 1352.0], [15.0, 1356.0], [15.1, 1358.0], [15.2, 1360.0], [15.3, 1363.0], [15.4, 1365.0], [15.5, 1369.0], [15.6, 1374.0], [15.7, 1377.0], [15.8, 1383.0], [15.9, 1385.0], [16.0, 1391.0], [16.1, 1400.0], [16.2, 1403.0], [16.3, 1412.0], [16.4, 1415.0], [16.5, 1424.0], [16.6, 1431.0], [16.7, 1441.0], [16.8, 1447.0], [16.9, 1452.0], [17.0, 1454.0], [17.1, 1460.0], [17.2, 1466.0], [17.3, 1477.0], [17.4, 1481.0], [17.5, 1486.0], [17.6, 1492.0], [17.7, 1495.0], [17.8, 1497.0], [17.9, 1501.0], [18.0, 1505.0], [18.1, 1507.0], [18.2, 1510.0], [18.3, 1513.0], [18.4, 1517.0], [18.5, 1520.0], [18.6, 1525.0], [18.7, 1526.0], [18.8, 1530.0], [18.9, 1531.0], [19.0, 1534.0], [19.1, 1538.0], [19.2, 1541.0], [19.3, 1543.0], [19.4, 1545.0], [19.5, 1547.0], [19.6, 1550.0], [19.7, 1551.0], [19.8, 1553.0], [19.9, 1557.0], [20.0, 1561.0], [20.1, 1563.0], [20.2, 1566.0], [20.3, 1566.0], [20.4, 1567.0], [20.5, 1569.0], [20.6, 1570.0], [20.7, 1572.0], [20.8, 1576.0], [20.9, 1579.0], [21.0, 1582.0], [21.1, 1586.0], [21.2, 1587.0], [21.3, 1590.0], [21.4, 1592.0], [21.5, 1600.0], [21.6, 1603.0], [21.7, 1608.0], [21.8, 1611.0], [21.9, 1616.0], [22.0, 1619.0], [22.1, 1621.0], [22.2, 1623.0], [22.3, 1626.0], [22.4, 1627.0], [22.5, 1630.0], [22.6, 1632.0], [22.7, 1635.0], [22.8, 1637.0], [22.9, 1641.0], [23.0, 1644.0], [23.1, 1649.0], [23.2, 1655.0], [23.3, 1661.0], [23.4, 1664.0], [23.5, 1666.0], [23.6, 1668.0], [23.7, 1672.0], [23.8, 1678.0], [23.9, 1679.0], [24.0, 1682.0], [24.1, 1687.0], [24.2, 1691.0], [24.3, 1696.0], [24.4, 1699.0], [24.5, 1702.0], [24.6, 1705.0], [24.7, 1709.0], [24.8, 1711.0], [24.9, 1718.0], [25.0, 1726.0], [25.1, 1734.0], [25.2, 1740.0], [25.3, 1752.0], [25.4, 1754.0], [25.5, 1760.0], [25.6, 1762.0], [25.7, 1775.0], [25.8, 1778.0], [25.9, 1783.0], [26.0, 1788.0], [26.1, 1791.0], [26.2, 1794.0], [26.3, 1802.0], [26.4, 1805.0], [26.5, 1807.0], [26.6, 1809.0], [26.7, 1812.0], [26.8, 1814.0], [26.9, 1817.0], [27.0, 1819.0], [27.1, 1820.0], [27.2, 1826.0], [27.3, 1828.0], [27.4, 1832.0], [27.5, 1838.0], [27.6, 1839.0], [27.7, 1842.0], [27.8, 1846.0], [27.9, 1848.0], [28.0, 1851.0], [28.1, 1856.0], [28.2, 1861.0], [28.3, 1863.0], [28.4, 1868.0], [28.5, 1873.0], [28.6, 1878.0], [28.7, 1882.0], [28.8, 1886.0], [28.9, 1891.0], [29.0, 1894.0], [29.1, 1896.0], [29.2, 1902.0], [29.3, 1908.0], [29.4, 1913.0], [29.5, 1922.0], [29.6, 1925.0], [29.7, 1929.0], [29.8, 1935.0], [29.9, 1939.0], [30.0, 1940.0], [30.1, 1943.0], [30.2, 1947.0], [30.3, 1955.0], [30.4, 1957.0], [30.5, 1961.0], [30.6, 1964.0], [30.7, 1969.0], [30.8, 1970.0], [30.9, 1973.0], [31.0, 1977.0], [31.1, 1986.0], [31.2, 1992.0], [31.3, 1997.0], [31.4, 1999.0], [31.5, 2003.0], [31.6, 2008.0], [31.7, 2015.0], [31.8, 2018.0], [31.9, 2026.0], [32.0, 2030.0], [32.1, 2035.0], [32.2, 2042.0], [32.3, 2049.0], [32.4, 2057.0], [32.5, 2062.0], [32.6, 2066.0], [32.7, 2073.0], [32.8, 2078.0], [32.9, 2081.0], [33.0, 2088.0], [33.1, 2092.0], [33.2, 2098.0], [33.3, 2101.0], [33.4, 2103.0], [33.5, 2106.0], [33.6, 2110.0], [33.7, 2119.0], [33.8, 2125.0], [33.9, 2128.0], [34.0, 2136.0], [34.1, 2144.0], [34.2, 2151.0], [34.3, 2157.0], [34.4, 2161.0], [34.5, 2164.0], [34.6, 2168.0], [34.7, 2172.0], [34.8, 2173.0], [34.9, 2175.0], [35.0, 2177.0], [35.1, 2179.0], [35.2, 2184.0], [35.3, 2185.0], [35.4, 2192.0], [35.5, 2198.0], [35.6, 2202.0], [35.7, 2205.0], [35.8, 2208.0], [35.9, 2211.0], [36.0, 2213.0], [36.1, 2215.0], [36.2, 2218.0], [36.3, 2221.0], [36.4, 2224.0], [36.5, 2229.0], [36.6, 2232.0], [36.7, 2233.0], [36.8, 2236.0], [36.9, 2239.0], [37.0, 2240.0], [37.1, 2243.0], [37.2, 2244.0], [37.3, 2247.0], [37.4, 2250.0], [37.5, 2254.0], [37.6, 2258.0], [37.7, 2261.0], [37.8, 2262.0], [37.9, 2264.0], [38.0, 2266.0], [38.1, 2272.0], [38.2, 2275.0], [38.3, 2277.0], [38.4, 2279.0], [38.5, 2282.0], [38.6, 2287.0], [38.7, 2290.0], [38.8, 2297.0], [38.9, 2304.0], [39.0, 2307.0], [39.1, 2310.0], [39.2, 2313.0], [39.3, 2320.0], [39.4, 2324.0], [39.5, 2326.0], [39.6, 2332.0], [39.7, 2336.0], [39.8, 2338.0], [39.9, 2341.0], [40.0, 2346.0], [40.1, 2347.0], [40.2, 2348.0], [40.3, 2352.0], [40.4, 2352.0], [40.5, 2354.0], [40.6, 2358.0], [40.7, 2362.0], [40.8, 2368.0], [40.9, 2370.0], [41.0, 2380.0], [41.1, 2389.0], [41.2, 2398.0], [41.3, 2403.0], [41.4, 2412.0], [41.5, 2434.0], [41.6, 2447.0], [41.7, 2453.0], [41.8, 2468.0], [41.9, 2483.0], [42.0, 2495.0], [42.1, 2502.0], [42.2, 2514.0], [42.3, 2526.0], [42.4, 2536.0], [42.5, 2542.0], [42.6, 2550.0], [42.7, 2558.0], [42.8, 2566.0], [42.9, 2576.0], [43.0, 2582.0], [43.1, 2587.0], [43.2, 2592.0], [43.3, 2599.0], [43.4, 2612.0], [43.5, 2619.0], [43.6, 2648.0], [43.7, 2653.0], [43.8, 2659.0], [43.9, 2673.0], [44.0, 2683.0], [44.1, 2697.0], [44.2, 2712.0], [44.3, 2726.0], [44.4, 2743.0], [44.5, 2751.0], [44.6, 2761.0], [44.7, 2771.0], [44.8, 2782.0], [44.9, 2787.0], [45.0, 2808.0], [45.1, 2821.0], [45.2, 2845.0], [45.3, 2861.0], [45.4, 2871.0], [45.5, 2880.0], [45.6, 2891.0], [45.7, 2899.0], [45.8, 2926.0], [45.9, 2947.0], [46.0, 2980.0], [46.1, 3007.0], [46.2, 3027.0], [46.3, 3045.0], [46.4, 3074.0], [46.5, 3093.0], [46.6, 3099.0], [46.7, 3109.0], [46.8, 3125.0], [46.9, 3142.0], [47.0, 3158.0], [47.1, 3166.0], [47.2, 3177.0], [47.3, 3200.0], [47.4, 3208.0], [47.5, 3218.0], [47.6, 3230.0], [47.7, 3254.0], [47.8, 3263.0], [47.9, 3272.0], [48.0, 3286.0], [48.1, 3293.0], [48.2, 3306.0], [48.3, 3315.0], [48.4, 3325.0], [48.5, 3348.0], [48.6, 3369.0], [48.7, 3379.0], [48.8, 3384.0], [48.9, 3408.0], [49.0, 3421.0], [49.1, 3436.0], [49.2, 3442.0], [49.3, 3452.0], [49.4, 3460.0], [49.5, 3471.0], [49.6, 3478.0], [49.7, 3484.0], [49.8, 3498.0], [49.9, 3505.0], [50.0, 3513.0], [50.1, 3519.0], [50.2, 3526.0], [50.3, 3536.0], [50.4, 3541.0], [50.5, 3545.0], [50.6, 3558.0], [50.7, 3560.0], [50.8, 3565.0], [50.9, 3571.0], [51.0, 3574.0], [51.1, 3579.0], [51.2, 3588.0], [51.3, 3593.0], [51.4, 3599.0], [51.5, 3603.0], [51.6, 3605.0], [51.7, 3607.0], [51.8, 3611.0], [51.9, 3613.0], [52.0, 3616.0], [52.1, 3623.0], [52.2, 3626.0], [52.3, 3630.0], [52.4, 3633.0], [52.5, 3635.0], [52.6, 3639.0], [52.7, 3642.0], [52.8, 3646.0], [52.9, 3649.0], [53.0, 3656.0], [53.1, 3663.0], [53.2, 3668.0], [53.3, 3675.0], [53.4, 3682.0], [53.5, 3691.0], [53.6, 3698.0], [53.7, 3704.0], [53.8, 3714.0], [53.9, 3721.0], [54.0, 3737.0], [54.1, 3742.0], [54.2, 3751.0], [54.3, 3759.0], [54.4, 3771.0], [54.5, 3780.0], [54.6, 3786.0], [54.7, 3791.0], [54.8, 3797.0], [54.9, 3805.0], [55.0, 3810.0], [55.1, 3817.0], [55.2, 3818.0], [55.3, 3824.0], [55.4, 3827.0], [55.5, 3830.0], [55.6, 3834.0], [55.7, 3842.0], [55.8, 3852.0], [55.9, 3857.0], [56.0, 3861.0], [56.1, 3867.0], [56.2, 3873.0], [56.3, 3887.0], [56.4, 3892.0], [56.5, 3895.0], [56.6, 3900.0], [56.7, 3915.0], [56.8, 3924.0], [56.9, 3930.0], [57.0, 3939.0], [57.1, 3951.0], [57.2, 3968.0], [57.3, 3978.0], [57.4, 3985.0], [57.5, 3995.0], [57.6, 3997.0], [57.7, 4004.0], [57.8, 4009.0], [57.9, 4020.0], [58.0, 4029.0], [58.1, 4041.0], [58.2, 4049.0], [58.3, 4062.0], [58.4, 4068.0], [58.5, 4075.0], [58.6, 4081.0], [58.7, 4099.0], [58.8, 4108.0], [58.9, 4118.0], [59.0, 4128.0], [59.1, 4134.0], [59.2, 4144.0], [59.3, 4155.0], [59.4, 4163.0], [59.5, 4167.0], [59.6, 4174.0], [59.7, 4181.0], [59.8, 4195.0], [59.9, 4206.0], [60.0, 4211.0], [60.1, 4217.0], [60.2, 4239.0], [60.3, 4251.0], [60.4, 4258.0], [60.5, 4268.0], [60.6, 4273.0], [60.7, 4280.0], [60.8, 4284.0], [60.9, 4287.0], [61.0, 4291.0], [61.1, 4296.0], [61.2, 4303.0], [61.3, 4315.0], [61.4, 4322.0], [61.5, 4328.0], [61.6, 4340.0], [61.7, 4356.0], [61.8, 4370.0], [61.9, 4385.0], [62.0, 4400.0], [62.1, 4410.0], [62.2, 4416.0], [62.3, 4423.0], [62.4, 4439.0], [62.5, 4449.0], [62.6, 4466.0], [62.7, 4487.0], [62.8, 4492.0], [62.9, 4501.0], [63.0, 4525.0], [63.1, 4553.0], [63.2, 4557.0], [63.3, 4577.0], [63.4, 4599.0], [63.5, 4610.0], [63.6, 4622.0], [63.7, 4631.0], [63.8, 4649.0], [63.9, 4682.0], [64.0, 4706.0], [64.1, 4730.0], [64.2, 4744.0], [64.3, 4761.0], [64.4, 4775.0], [64.5, 4796.0], [64.6, 4812.0], [64.7, 4833.0], [64.8, 4857.0], [64.9, 4867.0], [65.0, 4881.0], [65.1, 4895.0], [65.2, 4903.0], [65.3, 4917.0], [65.4, 4948.0], [65.5, 4979.0], [65.6, 4994.0], [65.7, 5019.0], [65.8, 5070.0], [65.9, 5101.0], [66.0, 5138.0], [66.1, 5243.0], [66.2, 5286.0], [66.3, 5339.0], [66.4, 5385.0], [66.5, 5415.0], [66.6, 5438.0], [66.7, 5468.0], [66.8, 5495.0], [66.9, 5524.0], [67.0, 5571.0], [67.1, 5614.0], [67.2, 5675.0], [67.3, 5721.0], [67.4, 5790.0], [67.5, 5981.0], [67.6, 6484.0], [67.7, 7480.0], [67.8, 7486.0], [67.9, 7500.0], [68.0, 7522.0], [68.1, 7532.0], [68.2, 7539.0], [68.3, 7547.0], [68.4, 7554.0], [68.5, 7568.0], [68.6, 7574.0], [68.7, 7581.0], [68.8, 7588.0], [68.9, 7594.0], [69.0, 7598.0], [69.1, 7600.0], [69.2, 7604.0], [69.3, 7609.0], [69.4, 7614.0], [69.5, 7617.0], [69.6, 7622.0], [69.7, 7627.0], [69.8, 7633.0], [69.9, 7637.0], [70.0, 7643.0], [70.1, 7652.0], [70.2, 7657.0], [70.3, 7667.0], [70.4, 7671.0], [70.5, 7673.0], [70.6, 7680.0], [70.7, 7685.0], [70.8, 7690.0], [70.9, 7698.0], [71.0, 7708.0], [71.1, 7712.0], [71.2, 7722.0], [71.3, 7727.0], [71.4, 7734.0], [71.5, 7741.0], [71.6, 7749.0], [71.7, 7758.0], [71.8, 7771.0], [71.9, 7779.0], [72.0, 7787.0], [72.1, 7797.0], [72.2, 7802.0], [72.3, 7809.0], [72.4, 7816.0], [72.5, 7822.0], [72.6, 7829.0], [72.7, 7850.0], [72.8, 7861.0], [72.9, 7875.0], [73.0, 7881.0], [73.1, 7898.0], [73.2, 7901.0], [73.3, 7913.0], [73.4, 7935.0], [73.5, 7948.0], [73.6, 7966.0], [73.7, 7978.0], [73.8, 8000.0], [73.9, 8026.0], [74.0, 8043.0], [74.1, 8055.0], [74.2, 8079.0], [74.3, 8115.0], [74.4, 8127.0], [74.5, 8137.0], [74.6, 8148.0], [74.7, 8161.0], [74.8, 8187.0], [74.9, 8215.0], [75.0, 8227.0], [75.1, 8249.0], [75.2, 8286.0], [75.3, 8319.0], [75.4, 8361.0], [75.5, 8388.0], [75.6, 8423.0], [75.7, 8449.0], [75.8, 8468.0], [75.9, 8497.0], [76.0, 8547.0], [76.1, 8571.0], [76.2, 8596.0], [76.3, 8627.0], [76.4, 8640.0], [76.5, 8666.0], [76.6, 8700.0], [76.7, 8722.0], [76.8, 8748.0], [76.9, 8782.0], [77.0, 8807.0], [77.1, 8847.0], [77.2, 8864.0], [77.3, 8912.0], [77.4, 8936.0], [77.5, 8980.0], [77.6, 9046.0], [77.7, 9162.0], [77.8, 9363.0], [77.9, 9495.0], [78.0, 9596.0], [78.1, 9657.0], [78.2, 9695.0], [78.3, 9853.0], [78.4, 15452.0], [78.5, 15494.0], [78.6, 15555.0], [78.7, 15567.0], [78.8, 15593.0], [78.9, 15609.0], [79.0, 15613.0], [79.1, 15624.0], [79.2, 15630.0], [79.3, 15642.0], [79.4, 15655.0], [79.5, 15661.0], [79.6, 15671.0], [79.7, 15678.0], [79.8, 15696.0], [79.9, 15698.0], [80.0, 15701.0], [80.1, 15708.0], [80.2, 15716.0], [80.3, 15725.0], [80.4, 15730.0], [80.5, 15739.0], [80.6, 15748.0], [80.7, 15757.0], [80.8, 15764.0], [80.9, 15768.0], [81.0, 15774.0], [81.1, 15781.0], [81.2, 15783.0], [81.3, 15790.0], [81.4, 15797.0], [81.5, 15802.0], [81.6, 15806.0], [81.7, 15818.0], [81.8, 15822.0], [81.9, 15825.0], [82.0, 15831.0], [82.1, 15840.0], [82.2, 15847.0], [82.3, 15859.0], [82.4, 15863.0], [82.5, 15869.0], [82.6, 15880.0], [82.7, 15885.0], [82.8, 15895.0], [82.9, 15898.0], [83.0, 15902.0], [83.1, 15911.0], [83.2, 15916.0], [83.3, 15920.0], [83.4, 15923.0], [83.5, 15928.0], [83.6, 15933.0], [83.7, 15943.0], [83.8, 15947.0], [83.9, 15958.0], [84.0, 15963.0], [84.1, 15970.0], [84.2, 15983.0], [84.3, 15994.0], [84.4, 16007.0], [84.5, 16017.0], [84.6, 16036.0], [84.7, 16052.0], [84.8, 16060.0], [84.9, 16063.0], [85.0, 16077.0], [85.1, 16086.0], [85.2, 16103.0], [85.3, 16119.0], [85.4, 16127.0], [85.5, 16138.0], [85.6, 16149.0], [85.7, 16170.0], [85.8, 16187.0], [85.9, 16199.0], [86.0, 16206.0], [86.1, 16211.0], [86.2, 16237.0], [86.3, 16258.0], [86.4, 16272.0], [86.5, 16278.0], [86.6, 16285.0], [86.7, 16297.0], [86.8, 16313.0], [86.9, 16326.0], [87.0, 16334.0], [87.1, 16351.0], [87.2, 16368.0], [87.3, 16377.0], [87.4, 16383.0], [87.5, 16395.0], [87.6, 16411.0], [87.7, 16420.0], [87.8, 16435.0], [87.9, 16442.0], [88.0, 16453.0], [88.1, 16469.0], [88.2, 16478.0], [88.3, 16499.0], [88.4, 16508.0], [88.5, 16529.0], [88.6, 16541.0], [88.7, 16558.0], [88.8, 16574.0], [88.9, 16586.0], [89.0, 16604.0], [89.1, 16613.0], [89.2, 16621.0], [89.3, 16637.0], [89.4, 16645.0], [89.5, 16650.0], [89.6, 16657.0], [89.7, 16664.0], [89.8, 16686.0], [89.9, 16692.0], [90.0, 16704.0], [90.1, 16708.0], [90.2, 16716.0], [90.3, 16722.0], [90.4, 16727.0], [90.5, 16732.0], [90.6, 16739.0], [90.7, 16746.0], [90.8, 16754.0], [90.9, 16757.0], [91.0, 16770.0], [91.1, 16775.0], [91.2, 16784.0], [91.3, 16794.0], [91.4, 16807.0], [91.5, 16812.0], [91.6, 16825.0], [91.7, 16834.0], [91.8, 16849.0], [91.9, 16861.0], [92.0, 16867.0], [92.1, 16879.0], [92.2, 16886.0], [92.3, 16894.0], [92.4, 16899.0], [92.5, 16905.0], [92.6, 16918.0], [92.7, 16927.0], [92.8, 16938.0], [92.9, 16950.0], [93.0, 16956.0], [93.1, 16981.0], [93.2, 16987.0], [93.3, 16997.0], [93.4, 17023.0], [93.5, 17042.0], [93.6, 17051.0], [93.7, 17059.0], [93.8, 17077.0], [93.9, 17092.0], [94.0, 17103.0], [94.1, 17113.0], [94.2, 17127.0], [94.3, 17131.0], [94.4, 17145.0], [94.5, 17164.0], [94.6, 17180.0], [94.7, 17189.0], [94.8, 17197.0], [94.9, 17211.0], [95.0, 17221.0], [95.1, 17230.0], [95.2, 17238.0], [95.3, 17256.0], [95.4, 17279.0], [95.5, 17307.0], [95.6, 17321.0], [95.7, 17326.0], [95.8, 17345.0], [95.9, 17375.0], [96.0, 17390.0], [96.1, 17409.0], [96.2, 17457.0], [96.3, 17478.0], [96.4, 17505.0], [96.5, 17518.0], [96.6, 17564.0], [96.7, 17587.0], [96.8, 17613.0], [96.9, 17629.0], [97.0, 17658.0], [97.1, 17681.0], [97.2, 17703.0], [97.3, 17750.0], [97.4, 17767.0], [97.5, 17780.0], [97.6, 17797.0], [97.7, 17827.0], [97.8, 17845.0], [97.9, 17878.0], [98.0, 17909.0], [98.1, 17934.0], [98.2, 17955.0], [98.3, 17977.0], [98.4, 18010.0], [98.5, 18039.0], [98.6, 18069.0], [98.7, 18158.0], [98.8, 18199.0], [98.9, 18246.0], [99.0, 18258.0], [99.1, 18324.0], [99.2, 18379.0], [99.3, 18453.0], [99.4, 18537.0], [99.5, 18712.0], [99.6, 18780.0], [99.7, 18954.0], [99.8, 19221.0], [99.9, 21488.0]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 179.0, "series": [{"data": [[400.0, 63.0], [500.0, 63.0], [600.0, 81.0], [700.0, 38.0], [800.0, 48.0], [900.0, 103.0], [1000.0, 62.0], [1100.0, 114.0], [1200.0, 129.0], [1300.0, 103.0], [1400.0, 91.0], [1500.0, 179.0], [1600.0, 149.0], [1700.0, 91.0], [1800.0, 145.0], [1900.0, 112.0], [2000.0, 92.0], [2100.0, 114.0], [2300.0, 120.0], [2200.0, 166.0], [2400.0, 40.0], [2500.0, 62.0], [2600.0, 40.0], [2800.0, 38.0], [2700.0, 42.0], [2900.0, 19.0], [3000.0, 26.0], [3100.0, 34.0], [3200.0, 43.0], [3300.0, 34.0], [3400.0, 51.0], [3500.0, 78.0], [3600.0, 111.0], [3700.0, 62.0], [3800.0, 86.0], [3900.0, 51.0], [4000.0, 55.0], [4200.0, 66.0], [4100.0, 57.0], [4300.0, 41.0], [4400.0, 45.0], [4600.0, 27.0], [4500.0, 26.0], [4700.0, 29.0], [4800.0, 31.0], [5000.0, 14.0], [4900.0, 23.0], [5100.0, 8.0], [5200.0, 8.0], [5300.0, 12.0], [5400.0, 18.0], [5500.0, 14.0], [5600.0, 8.0], [5800.0, 3.0], [5700.0, 8.0], [5900.0, 2.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 1.0], [7400.0, 14.0], [7600.0, 93.0], [7500.0, 59.0], [7700.0, 63.0], [7800.0, 49.0], [7900.0, 31.0], [8100.0, 31.0], [8000.0, 22.0], [8300.0, 16.0], [8200.0, 18.0], [8400.0, 19.0], [8500.0, 16.0], [8600.0, 18.0], [8700.0, 19.0], [8800.0, 15.0], [8900.0, 14.0], [9000.0, 4.0], [9100.0, 6.0], [9200.0, 1.0], [9500.0, 5.0], [9600.0, 10.0], [9400.0, 5.0], [9300.0, 2.0], [9700.0, 4.0], [9800.0, 3.0], [9900.0, 1.0], [10100.0, 1.0], [15400.0, 6.0], [15600.0, 55.0], [15500.0, 17.0], [15700.0, 73.0], [15800.0, 76.0], [15900.0, 69.0], [16000.0, 43.0], [16100.0, 38.0], [16200.0, 40.0], [16300.0, 42.0], [17200.0, 30.0], [16500.0, 32.0], [16400.0, 38.0], [16600.0, 51.0], [16700.0, 70.0], [16900.0, 44.0], [16800.0, 53.0], [17100.0, 43.0], [17000.0, 33.0], [17300.0, 32.0], [17400.0, 16.0], [18200.0, 12.0], [17500.0, 16.0], [17700.0, 21.0], [17600.0, 24.0], [18000.0, 17.0], [17800.0, 16.0], [17900.0, 21.0], [18100.0, 6.0], [18300.0, 11.0], [18400.0, 3.0], [18500.0, 6.0], [18600.0, 2.0], [18800.0, 2.0], [18700.0, 7.0], [18900.0, 4.0], [19000.0, 2.0], [19200.0, 1.0], [19400.0, 2.0], [19500.0, 2.0], [21400.0, 2.0], [21500.0, 3.0]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 64.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 4105.0, "series": [{"data": [[0.0, 64.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 831.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 4105.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 629.7392686804457, "minX": 1.64932674E12, "maxY": 1608.4313201496516, "series": [{"data": [[1.64932674E12, 1608.4313201496516], [1.6493268E12, 629.7392686804457]], "isOverall": false, "label": "Grupo de Hilos", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6493268E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 439.0, "minX": 2.0, "maxY": 21579.0, "series": [{"data": [[2.0, 21536.0], [3.0, 21579.0], [4.0, 21497.0], [5.0, 21488.0], [6.0, 18383.0], [7.0, 18353.0], [8.0, 19523.0], [9.0, 19503.0], [10.0, 19448.0], [11.0, 19431.0], [12.0, 17220.0], [13.0, 18248.0], [14.0, 19092.0], [15.0, 18007.0], [16.0, 18015.0], [17.0, 17977.0], [18.0, 19221.0], [19.0, 17908.0], [20.0, 17934.0], [21.0, 18500.0], [22.0, 19065.0], [23.0, 18453.0], [24.0, 18374.0], [25.0, 18954.0], [26.0, 17783.0], [27.0, 18999.0], [28.0, 18960.0], [29.0, 17780.0], [31.0, 17773.5], [33.0, 18873.0], [32.0, 17767.0], [35.0, 17852.0], [34.0, 18901.0], [37.0, 18765.0], [36.0, 18716.0], [39.0, 18780.0], [38.0, 18790.0], [41.0, 18760.0], [40.0, 18712.0], [43.0, 18537.0], [42.0, 17661.0], [45.0, 18800.0], [44.0, 18736.0], [47.0, 18644.0], [46.0, 18664.0], [49.0, 17469.0], [48.0, 18570.0], [51.0, 18532.0], [50.0, 17457.0], [53.0, 18065.0], [52.0, 17375.0], [55.0, 17930.0], [57.0, 17390.0], [56.0, 17929.0], [59.0, 18454.0], [58.0, 18341.0], [61.0, 18557.0], [60.0, 18324.0], [63.0, 18388.0], [62.0, 18379.0], [67.0, 17334.0], [66.0, 17238.0], [65.0, 17794.0], [64.0, 18449.0], [71.0, 17225.0], [70.0, 18234.0], [69.0, 17835.0], [68.0, 17273.0], [75.0, 17958.0], [74.0, 18182.0], [73.0, 17256.0], [72.0, 17238.0], [79.0, 17129.0], [78.0, 18246.0], [77.0, 18258.0], [76.0, 17211.0], [83.0, 18158.0], [82.0, 17955.0], [81.0, 18080.0], [80.0, 17235.0], [87.0, 17122.0], [86.0, 16111.0], [85.0, 18223.0], [84.0, 17141.0], [91.0, 18325.0], [90.0, 17503.666666666668], [95.0, 18249.0], [94.0, 17107.0], [93.0, 16562.0], [99.0, 18317.0], [98.0, 16968.0], [97.0, 18246.0], [96.0, 18240.0], [103.0, 18222.5], [101.0, 17042.0], [100.0, 18294.0], [107.0, 17705.0], [106.0, 17103.0], [105.0, 18394.0], [104.0, 17046.0], [111.0, 17043.0], [110.0, 17785.666666666668], [115.0, 18076.0], [114.0, 17903.0], [113.0, 18233.0], [112.0, 18172.0], [117.0, 17660.0], [116.0, 18069.0], [122.0, 16938.0], [121.0, 16997.0], [120.0, 17773.0], [127.0, 17023.0], [126.0, 17447.5], [124.0, 17387.5], [135.0, 18023.5], [133.0, 17055.0], [132.0, 18181.0], [131.0, 18010.0], [130.0, 16885.0], [129.0, 16956.0], [128.0, 17512.0], [143.0, 18046.0], [141.0, 17884.0], [140.0, 16927.0], [139.0, 17987.0], [138.0, 16948.0], [137.0, 17971.0], [136.0, 18044.0], [149.0, 16373.5], [147.0, 16004.0], [146.0, 16378.0], [144.0, 16794.0], [159.0, 15973.0], [158.0, 16860.0], [156.0, 16889.0], [155.0, 17573.0], [154.0, 16918.0], [153.0, 17043.25], [167.0, 17867.0], [166.0, 15804.0], [165.0, 15928.0], [164.0, 17231.666666666668], [161.0, 16732.0], [160.0, 15869.0], [175.0, 17342.5], [173.0, 16822.0], [172.0, 16931.0], [171.0, 15945.0], [170.0, 16732.0], [169.0, 16912.0], [168.0, 16889.0], [183.0, 16969.0], [182.0, 15941.0], [181.0, 16878.0], [180.0, 17434.5], [178.0, 15882.0], [177.0, 17834.0], [176.0, 17946.0], [191.0, 16827.0], [190.0, 17842.0], [189.0, 17945.0], [188.0, 16895.0], [187.0, 18028.0], [186.0, 16881.0], [185.0, 16866.0], [184.0, 15959.0], [199.0, 17789.0], [198.0, 17990.0], [197.0, 16806.0], [196.0, 18068.0], [195.0, 16843.0], [194.0, 17183.0], [193.0, 17900.0], [192.0, 15880.0], [207.0, 17766.0], [206.0, 17939.0], [205.0, 17346.0], [204.0, 17909.0], [203.0, 17031.0], [202.0, 17845.0], [201.0, 17878.0], [200.0, 17778.0], [215.0, 17329.0], [213.0, 16808.0], [212.0, 17872.0], [211.0, 17755.0], [210.0, 17084.0], [209.0, 17027.0], [208.0, 17918.0], [223.0, 16809.0], [222.0, 17758.0], [221.0, 17411.0], [220.0, 16798.0], [219.0, 16734.5], [217.0, 16756.0], [216.0, 17826.0], [231.0, 16770.0], [230.0, 16746.0], [229.0, 17329.0], [227.0, 16779.0], [226.0, 16733.0], [225.0, 17051.0], [224.0, 16793.0], [237.0, 16905.0], [236.0, 16690.666666666668], [233.0, 16793.0], [232.0, 16704.0], [247.0, 16742.0], [245.0, 16676.5], [243.0, 16673.0], [241.0, 16714.75], [255.0, 16682.0], [253.0, 16657.0], [252.0, 16659.0], [251.0, 16739.0], [250.0, 16784.0], [249.0, 16715.0], [248.0, 16754.0], [270.0, 17877.0], [271.0, 17696.0], [269.0, 16645.0], [268.0, 16689.0], [267.0, 16982.0], [265.0, 16618.0], [264.0, 16875.0], [263.0, 17664.0], [257.0, 16729.0], [256.0, 17690.0], [259.0, 16883.0], [258.0, 16648.0], [262.0, 16687.0], [261.0, 16633.0], [260.0, 17840.0], [286.0, 17818.0], [287.0, 17824.0], [285.0, 17777.0], [284.0, 17499.0], [283.0, 17226.5], [281.0, 16892.0], [280.0, 16808.0], [279.0, 16867.0], [273.0, 16616.0], [272.0, 16782.0], [278.0, 16849.0], [277.0, 16613.0], [276.0, 17016.666666666668], [302.0, 17017.5], [303.0, 16603.0], [300.0, 17632.0], [291.0, 16586.0], [290.0, 17583.0], [289.0, 17635.0], [288.0, 17785.0], [299.0, 16623.5], [297.0, 16541.0], [296.0, 18054.0], [295.0, 17654.0], [294.0, 16583.0], [293.0, 17741.0], [292.0, 16641.0], [318.0, 16721.0], [319.0, 17699.0], [317.0, 17600.0], [316.0, 17572.0], [315.0, 17505.0], [314.0, 17497.0], [313.0, 16713.0], [312.0, 16580.0], [311.0, 16724.0], [305.0, 17766.0], [304.0, 17600.0], [307.0, 16613.0], [306.0, 17651.0], [310.0, 17673.0], [309.0, 17509.0], [308.0, 17587.0], [333.0, 17499.0], [335.0, 17570.0], [332.0, 16648.0], [322.0, 15739.0], [321.0, 17730.0], [320.0, 17492.0], [331.0, 17622.0], [330.0, 17391.0], [329.0, 17608.0], [328.0, 17722.0], [327.0, 16494.0], [326.0, 16478.0], [325.0, 17690.0], [324.0, 16518.0], [350.0, 17625.0], [351.0, 17312.0], [349.0, 17465.0], [348.0, 17505.0], [347.0, 17388.0], [346.0, 16423.0], [345.0, 17476.0], [344.0, 17547.0], [343.0, 17658.0], [337.0, 17462.0], [339.0, 17681.0], [338.0, 17328.0], [342.0, 17311.0], [340.0, 17094.0], [366.0, 17258.0], [367.0, 17776.0], [365.0, 17228.0], [364.0, 16291.0], [363.0, 16350.0], [362.0, 17216.0], [361.0, 17434.0], [360.0, 16686.0], [359.0, 16884.0], [353.0, 17564.0], [352.0, 17629.0], [355.0, 17519.0], [354.0, 17613.0], [358.0, 16899.0], [357.0, 16879.0], [356.0, 17377.0], [376.0, 17478.0], [383.0, 17185.25], [371.0, 17230.0], [370.0, 17531.0], [369.0, 17536.0], [368.0, 17298.0], [379.0, 17255.0], [378.0, 17242.0], [377.0, 17348.0], [375.0, 17769.0], [374.0, 17311.0], [373.0, 16775.0], [372.0, 17257.0], [396.0, 16789.0], [398.0, 17243.0], [399.0, 16728.0], [397.0, 16920.0], [395.0, 16935.0], [394.0, 17060.75], [390.0, 17319.0], [389.0, 17272.5], [387.0, 16813.0], [386.0, 17191.0], [385.0, 16913.5], [414.0, 17331.0], [415.0, 17100.0], [413.0, 17358.0], [412.0, 16773.0], [411.0, 17145.0], [410.0, 17409.0], [409.0, 17053.0], [408.0, 17104.0], [407.0, 17059.0], [400.0, 17376.0], [403.0, 17142.0], [401.0, 17392.0], [406.0, 16754.0], [405.0, 17345.0], [404.0, 16758.0], [429.0, 1812.5], [431.0, 5317.5], [427.0, 1132.5], [425.0, 6409.0], [424.0, 8908.5], [423.0, 2614.3846153846152], [430.0, 15882.0], [428.0, 17096.333333333332], [419.0, 16154.0], [418.0, 16761.0], [417.0, 17399.0], [416.0, 17190.0], [422.0, 17194.0], [420.0, 16812.0], [447.0, 1622.5], [445.0, 6408.666666666667], [446.0, 17059.0], [443.0, 4243.333333333333], [444.0, 4636.6], [442.0, 5390.0], [440.0, 5346.0], [441.0, 17070.0], [439.0, 9481.5], [436.0, 5327.75], [438.0, 17188.0], [437.0, 16698.0], [433.0, 6369.666666666667], [435.0, 16114.0], [434.0, 16380.5], [450.0, 16694.0], [461.0, 16748.0], [448.0, 11819.333333333334], [449.0, 17307.0], [462.0, 16917.0], [459.0, 16293.4], [456.0, 16656.0], [453.0, 16807.0], [452.0, 16729.0], [451.0, 16718.0], [478.0, 15967.0], [466.0, 13394.4], [479.0, 16708.0], [477.0, 16067.0], [467.0, 16927.0], [475.0, 16501.5], [473.0, 16623.0], [472.0, 16896.0], [471.0, 15965.0], [464.0, 16097.0], [470.0, 16613.0], [469.0, 16529.0], [468.0, 17111.0], [494.0, 17053.0], [483.0, 9193.0], [482.0, 16544.0], [481.0, 16726.0], [480.0, 16829.0], [495.0, 17081.0], [493.0, 16620.0], [492.0, 17175.0], [491.0, 16564.0], [490.0, 17047.5], [488.0, 16995.0], [487.0, 16629.5], [485.0, 17180.0], [484.0, 16605.0], [510.0, 15862.0], [499.0, 9373.5], [511.0, 17183.0], [509.0, 15975.5], [507.0, 17213.0], [506.0, 17208.0], [505.0, 16793.333333333332], [503.0, 17173.0], [498.0, 15959.0], [497.0, 17210.0], [496.0, 15894.0], [501.0, 17233.0], [540.0, 8878.5], [520.0, 732.5], [522.0, 9230.5], [532.0, 6870.0], [538.0, 8457.0], [542.0, 15904.0], [536.0, 15920.0], [524.0, 17197.0], [512.0, 17197.0], [518.0, 16779.666666666668], [514.0, 17203.0], [534.0, 16668.5], [528.0, 16897.0], [550.0, 15763.0], [566.0, 8885.5], [574.0, 15743.0], [568.0, 15932.0], [562.0, 16716.0], [556.0, 16608.0], [554.0, 15911.0], [548.0, 17050.0], [546.0, 16536.0], [600.0, 15913.0], [594.0, 8791.0], [606.0, 15888.0], [604.0, 15867.0], [598.0, 16465.0], [586.0, 15952.0], [582.0, 16358.0], [580.0, 15847.0], [578.0, 15960.0], [576.0, 16272.5], [614.0, 16903.0], [634.0, 16989.0], [632.0, 16984.0], [630.0, 16894.0], [626.0, 16334.0], [616.0, 16992.5], [612.0, 15865.0], [610.0, 17005.0], [608.0, 16471.0], [668.0, 16751.0], [670.0, 16827.0], [666.0, 15731.0], [664.0, 15757.0], [662.0, 16898.0], [660.0, 16902.0], [658.0, 16982.0], [656.0, 17082.0], [654.0, 15794.0], [642.0, 15836.0], [640.0, 15826.0], [646.0, 16707.0], [644.0, 16664.0], [652.0, 15838.0], [650.0, 16983.0], [648.0, 15861.0], [700.0, 16556.0], [702.0, 16087.0], [698.0, 16637.0], [696.0, 16558.0], [694.0, 16663.0], [690.0, 16464.0], [688.0, 15719.0], [686.0, 16622.0], [678.0, 17150.0], [676.0, 16222.5], [674.0, 16809.0], [672.0, 16793.0], [680.0, 16834.0], [732.0, 16754.0], [708.0, 6534.666666666667], [706.0, 9176.0], [704.0, 16473.0], [718.0, 16331.0], [716.0, 16315.0], [714.0, 16249.5], [712.0, 15823.0], [734.0, 15902.0], [730.0, 16794.0], [728.0, 16278.0], [710.0, 16411.0], [726.0, 16745.0], [724.0, 16651.5], [722.0, 16418.0], [720.0, 16307.0], [766.0, 15858.0], [752.0, 8992.5], [762.0, 16166.5], [760.0, 16381.0], [758.0, 16453.0], [756.0, 15825.0], [754.0, 16376.0], [750.0, 16437.0], [742.0, 16140.0], [740.0, 16210.0], [736.0, 16280.5], [748.0, 16705.0], [798.0, 15889.0], [790.0, 6324.333333333333], [788.0, 9083.0], [786.0, 3152.0], [784.0, 16500.0], [778.0, 10149.8], [782.0, 16140.5], [772.0, 16219.0], [768.0, 16184.0], [780.0, 16451.0], [774.0, 8958.5], [796.0, 16036.5], [794.0, 16368.0], [792.0, 16065.0], [824.0, 16314.0], [830.0, 16380.0], [828.0, 16300.5], [826.0, 16318.5], [818.0, 16271.0], [814.0, 16272.0], [802.0, 15768.0], [800.0, 16173.0], [810.0, 16326.0], [808.0, 16411.0], [806.0, 15704.0], [804.0, 15726.0], [860.0, 16026.0], [862.0, 16164.5], [858.0, 16206.0], [856.0, 15555.0], [854.0, 16211.0], [852.0, 16308.0], [850.0, 16261.0], [848.0, 15620.0], [846.0, 16337.0], [834.0, 16278.0], [832.0, 16292.0], [838.0, 16360.0], [836.0, 16422.5], [844.0, 16207.0], [842.0, 16241.0], [840.0, 16245.0], [892.0, 16011.0], [894.0, 6614.333333333333], [890.0, 15994.0], [888.0, 15928.0], [886.0, 16297.0], [884.0, 16055.0], [882.0, 16201.0], [880.0, 16081.0], [878.0, 16056.0], [870.0, 16178.333333333334], [876.0, 15609.0], [874.0, 16141.0], [872.0, 16095.5], [898.0, 15770.0], [924.0, 15885.0], [896.0, 11014.666666666666], [910.0, 15804.0], [908.0, 15908.0], [906.0, 15916.0], [904.0, 15667.0], [922.0, 12362.0], [902.0, 15830.0], [900.0, 15914.0], [926.0, 16031.0], [912.0, 15665.0], [918.0, 16125.0], [916.0, 15897.0], [930.0, 15926.0], [944.0, 15823.0], [954.0, 15711.5], [952.0, 15638.0], [928.0, 16015.0], [932.0, 15842.0], [934.0, 15774.0], [942.0, 15901.0], [940.0, 16086.0], [938.0, 16064.0], [936.0, 16077.0], [950.0, 15798.5], [948.0, 16043.0], [946.0, 15758.0], [986.0, 15983.0], [968.0, 15732.0], [972.0, 16000.0], [978.0, 16007.0], [980.0, 15783.0], [988.0, 15843.0], [984.0, 15982.0], [966.0, 15708.0], [964.0, 15656.0], [962.0, 15725.0], [960.0, 15803.5], [982.0, 15781.0], [1020.0, 8998.25], [1016.0, 7836.333333333334], [1022.0, 6837.666666666667], [1018.0, 7011.333333333333], [1014.0, 9718.0], [1012.0, 5466.142857142857], [1010.0, 7078.5], [1008.0, 5478.6], [998.0, 8625.0], [996.0, 15863.0], [994.0, 15902.0], [992.0, 15781.0], [1006.0, 5838.6], [1004.0, 4088.0], [1000.0, 6716.0], [1002.0, 15788.5], [1080.0, 1670.259259259259], [1056.0, 8634.5], [1060.0, 2160.0], [1084.0, 5832.25], [1072.0, 2744.0], [1036.0, 9884.5], [1076.0, 2836.454545454546], [1068.0, 4978.5], [1064.0, 9807.5], [1052.0, 5640.888888888889], [1048.0, 6502.0], [1044.0, 7784.4], [1040.0, 5470.75], [1024.0, 8907.0], [1028.0, 15624.0], [1032.0, 3630.1666666666665], [1100.0, 2098.373737373738], [1136.0, 4500.0], [1096.0, 3905.0], [1120.0, 7589.0], [1124.0, 5122.333333333333], [1128.0, 4277.666666666667], [1132.0, 6173.5], [1116.0, 3777.0], [1112.0, 4006.4], [1108.0, 1538.0], [1104.0, 1862.2083333333335], [1140.0, 5467.5], [1148.0, 5895.5], [1092.0, 3519.166666666667], [1088.0, 11574.0], [1156.0, 5181.5], [1160.0, 4590.333333333333], [1152.0, 2098.3333333333335], [1180.0, 2898.6666666666665], [1172.0, 4348.666666666667], [1168.0, 3770.0], [1164.0, 5718.5], [1200.0, 3198.0], [1204.0, 2500.0], [1208.0, 3621.0], [1184.0, 3671.0], [1212.0, 2920.0], [1196.0, 3555.3333333333335], [1192.0, 3340.6666666666665], [1188.0, 2797.5], [1216.0, 3601.0], [1224.0, 1855.0], [1240.0, 2400.5], [1236.0, 1709.0], [1232.0, 3434.0], [1244.0, 4097.666666666667], [1220.0, 3456.5], [1228.0, 3396.3333333333335], [1264.0, 5669.5], [1268.0, 4840.666666666667], [1272.0, 4740.0], [1248.0, 3185.25], [1276.0, 1342.8235294117646], [1252.0, 4794.5], [1256.0, 4932.666666666667], [1260.0, 1819.0], [1284.0, 3667.75], [1280.0, 1879.8], [1308.0, 2709.2], [1304.0, 2860.6666666666665], [1288.0, 5200.333333333333], [1300.0, 2715.857142857143], [1296.0, 1108.1666666666667], [1328.0, 4893.25], [1332.0, 3032.75], [1336.0, 3828.0], [1340.0, 4259.0], [1312.0, 5497.5], [1316.0, 2421.5], [1320.0, 5464.5], [1324.0, 3000.0], [1292.0, 2263.875], [1344.0, 3196.8333333333335], [1348.0, 4387.0], [1364.0, 2602.5], [1360.0, 3916.25], [1368.0, 2198.6666666666665], [1372.0, 1885.5], [1388.0, 4612.0], [1384.0, 2667.2], [1380.0, 3941.25], [1376.0, 2628.0], [1392.0, 3224.333333333333], [1356.0, 7706.0], [1352.0, 2763.3333333333335], [1396.0, 2366.714285714286], [1400.0, 2477.0], [1404.0, 3074.0], [1412.0, 1883.0], [1448.0, 3267.5], [1408.0, 3472.2], [1416.0, 3412.75], [1420.0, 3981.5], [1436.0, 4875.0], [1432.0, 3527.6666666666665], [1428.0, 1059.5], [1424.0, 5135.0], [1440.0, 3457.75], [1460.0, 1845.0], [1464.0, 5495.0], [1456.0, 2296.5], [1452.0, 2467.6315789473683], [1444.0, 2971.714285714286], [1472.0, 7908.0], [1496.0, 4722.0], [1492.0, 4268.0], [1488.0, 8374.0], [1532.0, 6789.071428571427], [1480.0, 3646.666666666667], [1476.0, 8191.0], [1500.0, 8030.0], [1516.0, 3912.0], [1512.0, 7759.0], [1508.0, 3960.0], [1504.0, 7739.0], [1592.0, 8781.0], [1596.0, 5661.0], [1572.0, 8935.0], [1568.0, 8096.5], [1576.0, 8960.0], [1588.0, 7875.0], [1584.0, 8924.0], [1544.0, 8286.0], [1540.0, 7672.5], [1536.0, 7907.5], [1560.0, 3711.0], [1556.0, 8137.0], [1552.0, 7850.0], [1580.0, 8853.0], [1648.0, 8944.5], [1632.0, 6484.0], [1656.0, 9679.0], [1652.0, 8596.0], [1612.0, 2799.5], [1608.0, 6760.0], [1604.0, 5752.0], [1600.0, 7746.0], [1628.0, 8277.0], [1624.0, 846.0], [1620.0, 7245.5], [1616.0, 8314.0], [1640.0, 6390.25], [1712.0, 4484.5], [1696.0, 8423.0], [1700.0, 3369.0], [1704.0, 8409.0], [1664.0, 8578.5], [1668.0, 6612.5], [1676.0, 9657.0], [1692.0, 6084.0], [1684.0, 3404.0], [1680.0, 4060.5], [1724.0, 4405.0], [1720.0, 3313.0], [1716.0, 9495.0], [1708.0, 4207.0], [1740.0, 4324.0], [1744.0, 473.0], [1752.0, 5714.0], [1756.0, 6010.5], [1768.0, 3794.0], [1764.0, 1636.0], [1760.0, 5468.0], [1780.0, 1566.0], [1788.0, 4822.0], [1784.0, 5262.0], [1736.0, 1831.0], [1732.0, 4714.5], [1728.0, 8581.0], [1848.0, 8847.0], [1824.0, 8954.0], [1828.0, 5465.0], [1832.0, 8912.0], [1852.0, 8287.0], [1844.0, 8864.0], [1840.0, 5382.0], [1792.0, 4796.0], [1796.0, 8955.0], [1800.0, 2240.0], [1804.0, 5778.0], [1820.0, 2855.0], [1816.0, 8997.0], [1812.0, 9009.0], [1808.0, 1363.0], [1836.0, 2712.0], [1860.0, 8796.0], [1868.0, 8762.0], [1912.0, 8027.5], [1864.0, 2097.0], [1856.0, 3518.0], [1884.0, 8722.0], [1880.0, 7722.0], [1876.0, 1527.2], [1872.0, 8752.0], [1888.0, 5518.0], [1892.0, 2992.0], [1896.0, 8613.0], [1908.0, 8627.0], [1900.0, 3588.0], [1968.0, 2157.0], [1976.0, 4738.0], [1952.0, 3583.0], [1960.0, 8242.0], [1980.0, 4712.0], [1972.0, 2055.5], [1920.0, 7007.5], [1924.0, 2412.0], [1928.0, 8497.0], [1932.0, 8467.0], [1948.0, 1937.0], [1944.0, 8387.0], [1940.0, 2180.0], [1936.0, 7586.0], [2040.0, 4383.0], [2044.0, 1022.0], [2016.0, 3010.0], [2020.0, 4567.0], [2024.0, 4453.0], [2032.0, 4356.0], [1996.0, 1351.0], [1992.0, 4689.0], [1984.0, 4735.0], [2012.0, 3827.0], [2008.0, 2952.0], [2000.0, 1936.0], [2028.0, 1526.0], [2072.0, 3398.6666666666665], [2168.0, 2865.6666666666665], [2056.0, 1054.5], [2096.0, 1699.0], [2104.0, 2899.2], [2048.0, 3608.0], [2064.0, 975.6666666666666], [2128.0, 3283.6666666666665], [2136.0, 2436.333333333333], [2120.0, 2067.0], [2112.0, 3391.3333333333335], [2152.0, 3302.5], [2144.0, 1235.75], [2176.0, 4696.0], [2184.0, 2492.5], [2232.0, 5036.0], [2224.0, 631.0], [2216.0, 664.0], [2208.0, 1846.0], [2192.0, 4755.0], [2200.0, 762.0], [2248.0, 2311.833333333333], [2240.0, 1991.0], [2256.0, 2609.0], [2264.0, 4489.0], [2296.0, 5543.0], [2288.0, 2502.0], [2280.0, 4258.0], [2312.0, 691.0], [2328.0, 3543.0], [2424.0, 1433.0], [2320.0, 4667.0], [2360.0, 2732.5], [2352.0, 4916.0], [2344.0, 4271.0], [2304.0, 5138.0], [2368.0, 2522.0], [2416.0, 4761.0], [2392.0, 2128.0], [2528.0, 3750.5], [2448.0, 974.0], [2536.0, 1712.5], [2544.0, 1895.0], [2552.0, 3242.5], [2496.0, 4555.0], [2520.0, 1320.3333333333333], [2488.0, 1403.0], [2464.0, 620.0], [2568.0, 2768.0], [2584.0, 1128.0], [2560.0, 2406.5], [2576.0, 3329.625], [2592.0, 1019.0], [2616.0, 4017.0], [2600.0, 956.0], [2073.0, 1650.0], [2145.0, 1805.0], [2065.0, 1184.0], [2057.0, 945.0], [2153.0, 4209.0], [2105.0, 1322.3333333333333], [2081.0, 3339.0], [2113.0, 1177.3333333333333], [2129.0, 1389.0], [2137.0, 2334.6666666666665], [2097.0, 3385.75], [2169.0, 1715.6666666666665], [2193.0, 4631.0], [2273.0, 2901.5], [2297.0, 4080.0], [2185.0, 2867.0], [2201.0, 3623.0], [2233.0, 590.0], [2225.0, 998.0], [2217.0, 681.0], [2209.0, 514.0], [2241.0, 5101.0], [2249.0, 888.0], [2289.0, 4917.0], [2257.0, 2168.0], [2313.0, 4217.0], [2329.0, 4145.0], [2377.0, 3578.0], [2353.0, 5243.0], [2337.0, 4621.0], [2305.0, 1453.0], [2321.0, 5313.0], [2361.0, 4982.0], [2385.0, 4429.0], [2369.0, 1175.0], [2545.0, 582.0], [2457.0, 474.0], [2529.0, 1787.0], [2537.0, 1244.5], [2553.0, 2506.25], [2497.0, 1075.0], [2505.0, 3832.0], [2521.0, 1863.0], [2513.0, 3139.0], [2465.0, 2737.75], [2473.0, 2852.0], [2489.0, 490.0], [2433.0, 4691.5], [2617.0, 915.0], [2561.0, 3183.956521739131], [2593.0, 2042.0], [2569.0, 4248.0], [2577.0, 2869.8333333333335], [2585.0, 1101.0], [2609.0, 3027.6666666666665], [2601.0, 955.0], [1085.0, 8532.5], [1057.0, 5859.4], [1081.0, 4355.5], [1037.0, 9003.0], [1073.0, 4037.0], [1077.0, 5302.0], [1069.0, 6886.333333333333], [1065.0, 8069.333333333334], [1061.0, 7282.2], [1053.0, 4311.0], [1049.0, 2992.0], [1045.0, 6302.0], [1041.0, 6712.666666666667], [1029.0, 9064.0], [1025.0, 5948.25], [1033.0, 5494.75], [1121.0, 2391.785714285714], [1125.0, 4448.2], [1129.0, 4835.666666666667], [1133.0, 3891.666666666667], [1113.0, 2204.3846153846152], [1109.0, 6124.0], [1117.0, 3514.0], [1105.0, 4603.0], [1101.0, 1899.2307692307693], [1137.0, 4613.5], [1141.0, 3843.0], [1145.0, 5522.75], [1149.0, 4507.0], [1097.0, 4972.0], [1093.0, 7731.0], [1089.0, 4802.0], [1153.0, 6204.666666666667], [1157.0, 5186.333333333333], [1177.0, 5128.75], [1181.0, 3752.0], [1173.0, 1422.0], [1169.0, 3478.4], [1161.0, 5685.5], [1165.0, 4904.0], [1201.0, 2500.0], [1205.0, 3040.3333333333335], [1213.0, 2620.0], [1209.0, 3618.5], [1197.0, 3632.0], [1193.0, 2772.5], [1189.0, 3386.0], [1185.0, 2341.3333333333335], [1245.0, 3173.6666666666665], [1241.0, 1891.0], [1237.0, 2834.0], [1233.0, 2399.0], [1217.0, 1923.75], [1221.0, 2581.666666666667], [1225.0, 2128.6666666666665], [1229.0, 2079.6666666666665], [1265.0, 7725.0], [1269.0, 5582.5], [1273.0, 5582.5], [1249.0, 1878.5], [1277.0, 3427.25], [1257.0, 4774.0], [1281.0, 4251.2], [1285.0, 5362.0], [1301.0, 2683.3333333333335], [1305.0, 2145.3333333333335], [1309.0, 1732.1666666666667], [1289.0, 3610.0], [1297.0, 4390.285714285714], [1293.0, 4093.333333333333], [1329.0, 3418.0], [1333.0, 3787.5], [1337.0, 4393.0], [1341.0, 3690.0], [1313.0, 3569.25], [1317.0, 2226.3333333333335], [1321.0, 4055.0], [1325.0, 4375.25], [1349.0, 2364.2], [1377.0, 3348.0], [1345.0, 4504.0], [1365.0, 3879.0], [1361.0, 2401.5], [1369.0, 4169.333333333333], [1373.0, 2382.0], [1389.0, 2014.5], [1385.0, 4081.4285714285716], [1381.0, 2702.5], [1357.0, 2623.8], [1353.0, 1934.0], [1393.0, 3633.6], [1397.0, 2311.8], [1401.0, 2211.0], [1405.0, 2426.0], [1413.0, 5113.0], [1421.0, 3846.0], [1409.0, 5074.5], [1417.0, 1869.3333333333333], [1437.0, 3897.333333333333], [1433.0, 4449.0], [1429.0, 2962.3333333333335], [1425.0, 5088.5], [1457.0, 4697.2], [1461.0, 4358.0], [1465.0, 5124.0], [1469.0, 7914.5], [1441.0, 2517.0], [1453.0, 2021.1666666666667], [1449.0, 2430.5], [1445.0, 2246.2], [1477.0, 7852.0], [1485.0, 4678.5], [1533.0, 4011.0], [1517.0, 8064.0], [1509.0, 8004.0], [1505.0, 7797.0], [1473.0, 7898.0], [1481.0, 1557.0], [1501.0, 7741.0], [1497.0, 7813.0], [1493.0, 7905.0], [1489.0, 8420.0], [1597.0, 3413.0], [1569.0, 8031.0], [1573.0, 3606.0], [1577.0, 9970.0], [1593.0, 9854.0], [1585.0, 8467.0], [1565.0, 5973.5], [1537.0, 9169.0], [1541.0, 7539.0], [1545.0, 7673.0], [1549.0, 3980.0], [1561.0, 3926.0], [1557.0, 8160.0], [1581.0, 8856.0], [1649.0, 3559.0], [1629.0, 3364.0], [1601.0, 7861.0], [1605.0, 9856.0], [1625.0, 3359.0], [1617.0, 6326.0], [1641.0, 5030.6], [1661.0, 8590.0], [1653.0, 8370.0], [1613.0, 7781.0], [1645.0, 4745.0], [1673.0, 9637.5], [1725.0, 9341.0], [1681.0, 5373.5], [1685.0, 3207.0], [1689.0, 9010.5], [1677.0, 8535.0], [1693.0, 3453.0], [1701.0, 8361.0], [1705.0, 9473.0], [1721.0, 8079.0], [1709.0, 5416.0], [1733.0, 9436.0], [1777.0, 5332.0], [1789.0, 9006.0], [1781.0, 3789.0], [1757.0, 2171.5], [1753.0, 2823.0], [1749.0, 2990.5], [1745.0, 2935.0], [1729.0, 2609.0], [1737.0, 1831.0], [1741.0, 5758.0], [1761.0, 3045.0], [1765.0, 5704.0], [1785.0, 5614.0], [1797.0, 5596.0], [1845.0, 4118.0], [1825.0, 8793.0], [1841.0, 4621.0], [1793.0, 4810.0], [1801.0, 5598.0], [1821.0, 2768.0], [1817.0, 4246.0], [1809.0, 2157.0], [1833.0, 8914.0], [1829.0, 5495.0], [1865.0, 1585.0], [1861.0, 6664.0], [1869.0, 1878.0], [1857.0, 7688.0], [1881.0, 8707.0], [1877.0, 7879.0], [1913.0, 3540.0], [1893.0, 5415.0], [1889.0, 8704.0], [1909.0, 5136.0], [1905.0, 6707.5], [1901.0, 8614.0], [1977.0, 2066.0], [1949.0, 4640.0], [1945.0, 5182.0], [1941.0, 2168.0], [1937.0, 1550.0], [1953.0, 1570.0], [1961.0, 2103.0], [1965.0, 5111.5], [1981.0, 4706.0], [1973.0, 4744.0], [1969.0, 3497.0], [1933.0, 8451.0], [1929.0, 8452.0], [1921.0, 5339.0], [2017.0, 439.0], [2029.0, 3054.5], [2025.0, 4469.0], [2021.0, 1765.0], [2045.0, 1025.0], [2041.0, 4366.0], [2037.0, 4418.0], [2033.0, 4297.0], [1997.0, 1957.0], [1993.0, 1312.0], [1989.0, 3464.0], [1985.0, 1345.0], [2013.0, 4903.0], [2009.0, 1894.0], [2005.0, 2910.5], [2001.0, 4600.0], [2058.0, 2455.3333333333335], [2162.0, 2313.0], [2098.0, 1831.6666666666667], [2106.0, 4113.0], [2050.0, 2671.5], [2090.0, 1156.5], [2082.0, 1260.0], [2122.0, 1427.142857142857], [2138.0, 1788.3636363636363], [2114.0, 1425.3333333333333], [2154.0, 1176.5], [2146.0, 1802.0], [2074.0, 7752.0], [2066.0, 4294.0], [2186.0, 822.0], [2178.0, 2421.8], [2202.0, 3671.0], [2234.0, 2771.0], [2226.0, 993.0], [2218.0, 4003.0], [2210.0, 3678.0], [2298.0, 4282.0], [2242.0, 5385.0], [2250.0, 887.0], [2258.0, 846.0], [2290.0, 4095.0], [2282.0, 3406.0], [2266.0, 2474.0], [2362.0, 2306.0], [2338.0, 1664.0], [2346.0, 4983.0], [2354.0, 1601.0], [2378.0, 4866.0], [2314.0, 4203.0], [2306.0, 1212.0], [2322.0, 4019.0], [2546.0, 2345.0], [2530.0, 4154.5], [2554.0, 1073.0], [2498.0, 4004.0], [2538.0, 2310.8333333333335], [2506.0, 2118.3333333333335], [2514.0, 2421.0], [2522.0, 1785.5], [2450.0, 2058.5], [2442.0, 550.0], [2490.0, 3497.75], [2570.0, 3334.0], [2586.0, 4040.0], [2562.0, 3498.7037037037044], [2578.0, 4144.0], [2594.0, 1492.0], [2618.0, 3888.0], [2610.0, 988.0], [2602.0, 1098.0], [2075.0, 4285.0], [2059.0, 2412.5], [2051.0, 1003.0], [2147.0, 1893.0], [2067.0, 4285.0], [2155.0, 1856.0], [2163.0, 1859.0], [2107.0, 3878.333333333333], [2091.0, 917.5714285714286], [2115.0, 847.0], [2123.0, 1213.5], [2131.0, 1672.3333333333333], [2139.0, 1514.0], [2099.0, 939.0], [2171.0, 3782.0], [2187.0, 3797.0], [2275.0, 1469.3333333333333], [2179.0, 2172.0], [2203.0, 3683.0], [2235.0, 2008.0], [2219.0, 674.0], [2211.0, 2102.0], [2227.0, 2024.0], [2243.0, 1977.0], [2251.0, 540.0], [2259.0, 4385.0], [2267.0, 1812.0], [2299.0, 4293.0], [2323.0, 1924.0], [2427.0, 2738.0], [2307.0, 2418.0], [2331.0, 3924.0], [2347.0, 1085.0], [2339.0, 3176.5], [2363.0, 2813.0], [2395.0, 4367.0], [2387.0, 4993.0], [2379.0, 4888.0], [2371.0, 3188.5], [2547.0, 2479.25], [2531.0, 2466.3333333333335], [2555.0, 2697.5], [2539.0, 2303.6], [2507.0, 2039.0], [2523.0, 3539.0], [2515.0, 4274.0], [2451.0, 510.0], [2443.0, 533.0], [2467.0, 3672.0], [2435.0, 4259.0], [2491.0, 2211.714285714286], [2611.0, 3934.0], [2595.0, 1459.5], [2563.0, 2342.0], [2571.0, 4008.0], [2579.0, 4179.0], [539.0, 6449.666666666667], [543.0, 9311.0], [529.0, 9029.5], [541.0, 16526.0], [537.0, 17164.0], [519.0, 16535.0], [515.0, 17211.0], [513.0, 17443.0], [535.0, 16031.0], [531.0, 16326.0], [527.0, 16764.333333333332], [523.0, 17002.0], [521.0, 16541.5], [569.0, 16526.5], [573.0, 15865.5], [567.0, 1947.0], [571.0, 15914.5], [565.0, 16092.333333333334], [561.0, 15927.0], [559.0, 16184.0], [545.0, 17095.0], [549.0, 17048.0], [547.0, 15977.0], [557.0, 17125.0], [555.0, 16452.0], [553.0, 16853.333333333332], [605.0, 15822.0], [607.0, 15899.0], [603.0, 15803.5], [601.0, 15707.0], [599.0, 16442.0], [595.0, 16060.0], [593.0, 16264.0], [591.0, 16116.5], [579.0, 15928.0], [577.0, 16177.0], [583.0, 15921.0], [581.0, 15923.0], [589.0, 16081.333333333334], [585.0, 16372.5], [637.0, 16901.5], [639.0, 16102.5], [635.0, 16957.0], [633.0, 16861.0], [631.0, 16951.0], [629.0, 17043.5], [627.0, 16479.0], [625.0, 16216.5], [621.0, 16604.333333333332], [609.0, 15803.0], [615.0, 16904.0], [611.0, 17071.0], [619.0, 16926.0], [617.0, 16976.0], [669.0, 16867.0], [645.0, 11435.333333333334], [647.0, 15697.0], [671.0, 16877.0], [667.0, 16846.0], [665.0, 17168.0], [663.0, 16762.0], [661.0, 16917.0], [657.0, 15825.0], [655.0, 15840.0], [653.0, 15802.0], [651.0, 17008.0], [649.0, 15797.0], [701.0, 16555.0], [703.0, 16592.0], [699.0, 16563.0], [697.0, 16520.0], [695.0, 16645.0], [693.0, 16757.5], [691.0, 16610.0], [687.0, 16151.0], [679.0, 16784.0], [673.0, 16824.0], [681.0, 16832.0], [731.0, 16420.0], [707.0, 6608.666666666667], [709.0, 8752.5], [733.0, 16499.0], [729.0, 16746.0], [711.0, 16388.0], [727.0, 16515.0], [725.0, 16397.0], [721.0, 16476.0], [719.0, 16202.0], [717.0, 15897.0], [715.0, 16508.0], [767.0, 16441.0], [763.0, 8485.5], [741.0, 8533.5], [739.0, 16093.666666666666], [765.0, 16000.0], [759.0, 15904.0], [757.0, 16408.0], [755.0, 16469.0], [753.0, 16447.0], [751.0, 16382.0], [749.0, 16458.0], [747.0, 16341.5], [745.0, 16221.666666666666], [793.0, 15714.0], [787.0, 3076.1111111111113], [789.0, 6155.666666666667], [783.0, 8883.0], [779.0, 4533.0], [773.0, 1068.5], [799.0, 15751.0], [785.0, 16052.0], [775.0, 16432.0], [817.0, 15719.333333333334], [829.0, 16235.0], [823.0, 16282.5], [821.0, 16267.5], [819.0, 15713.0], [813.0, 16519.0], [811.0, 16320.0], [809.0, 16407.0], [807.0, 16330.0], [805.0, 15699.0], [803.0, 16370.0], [801.0, 16340.0], [859.0, 16194.0], [857.0, 16143.0], [839.0, 16279.0], [837.0, 16222.0], [833.0, 16237.0], [855.0, 16291.0], [853.0, 16211.0], [851.0, 16103.0], [849.0, 15675.0], [847.0, 15876.0], [845.0, 16200.0], [843.0, 16237.0], [891.0, 8365.5], [877.0, 8728.5], [875.0, 16063.0], [873.0, 16145.0], [893.0, 16069.0], [889.0, 16046.0], [867.0, 16169.5], [865.0, 16102.333333333334], [887.0, 16027.0], [885.0, 16332.0], [883.0, 16064.0], [881.0, 15630.0], [879.0, 16080.0], [899.0, 4284.2], [897.0, 16062.0], [909.0, 15898.0], [907.0, 15854.0], [905.0, 15918.0], [903.0, 15790.0], [901.0, 15885.0], [915.0, 15725.0], [913.0, 15895.0], [923.0, 15878.0], [919.0, 15800.0], [917.0, 15891.0], [933.0, 15819.0], [955.0, 16059.0], [947.0, 15901.0], [957.0, 15696.0], [943.0, 15748.0], [929.0, 15697.0], [931.0, 16138.0], [935.0, 15863.0], [941.0, 15818.0], [939.0, 15772.0], [937.0, 15916.0], [951.0, 15764.0], [945.0, 15821.0], [987.0, 15764.0], [969.0, 9029.5], [971.0, 15863.5], [973.0, 15817.0], [991.0, 15761.5], [977.0, 15903.5], [979.0, 15987.0], [981.0, 15963.0], [989.0, 15895.0], [985.0, 15966.0], [967.0, 15806.0], [965.0, 15708.0], [963.0, 15639.0], [961.0, 15605.0], [975.0, 15795.0], [983.0, 15934.0], [1021.0, 7040.333333333333], [1023.0, 9581.0], [1019.0, 2785.5], [1015.0, 8844.0], [1013.0, 8061.0], [1011.0, 9724.0], [1009.0, 2862.0], [1007.0, 4177.714285714286], [997.0, 15918.0], [993.0, 15944.0], [999.0, 9984.5], [1017.0, 8980.5], [1005.0, 7872.0], [1003.0, 6512.4], [1086.0, 5519.0], [1074.0, 12655.5], [1034.0, 4138.285714285714], [1058.0, 9678.0], [1082.0, 2725.5], [1038.0, 9580.0], [1078.0, 7253.333333333333], [1070.0, 9737.5], [1062.0, 9769.0], [1066.0, 9740.0], [1054.0, 6325.333333333333], [1050.0, 5751.8], [1046.0, 7655.666666666666], [1042.0, 7711.0], [1026.0, 9883.5], [1030.0, 15778.0], [1138.0, 4884.0], [1122.0, 2569.75], [1126.0, 5633.0], [1130.0, 3193.75], [1134.0, 5181.5], [1118.0, 1762.6641791044767], [1114.0, 4073.8], [1110.0, 4581.5], [1106.0, 1335.125], [1102.0, 3780.0], [1142.0, 6239.666666666667], [1146.0, 5664.5], [1150.0, 7595.0], [1098.0, 4601.666666666667], [1094.0, 3602.0], [1090.0, 4982.666666666667], [1162.0, 7486.0], [1154.0, 7545.0], [1182.0, 2981.5], [1178.0, 5549.5], [1174.0, 7599.5], [1170.0, 4861.0], [1166.0, 5590.5], [1202.0, 3664.5], [1158.0, 3581.666666666667], [1214.0, 2556.5], [1210.0, 2095.5], [1194.0, 2217.0], [1190.0, 2535.0], [1186.0, 3851.0], [1222.0, 2073.5], [1246.0, 3449.0], [1278.0, 3393.666666666667], [1238.0, 2175.0], [1234.0, 2752.3333333333335], [1242.0, 2202.3333333333335], [1218.0, 2598.75], [1226.0, 2187.75], [1266.0, 4874.333333333333], [1270.0, 7648.0], [1230.0, 1896.0], [1274.0, 2526.857142857143], [1262.0, 1235.0], [1254.0, 5233.25], [1258.0, 7715.0], [1250.0, 4038.6], [1282.0, 3372.3333333333335], [1294.0, 2318.8], [1306.0, 2467.142857142857], [1302.0, 1091.0], [1310.0, 2276.6], [1286.0, 4582.333333333333], [1290.0, 2306.333333333333], [1298.0, 2324.0], [1330.0, 4779.0], [1334.0, 4862.5], [1338.0, 2785.6666666666665], [1342.0, 4653.0], [1314.0, 2679.0], [1318.0, 4214.666666666667], [1322.0, 3867.5], [1326.0, 4257.5], [1374.0, 5103.5], [1346.0, 2310.8333333333335], [1362.0, 3203.0], [1366.0, 2523.0], [1370.0, 4293.0], [1390.0, 2646.0], [1386.0, 2114.0], [1382.0, 2129.3333333333335], [1378.0, 3970.5714285714284], [1358.0, 2535.5], [1354.0, 5437.0], [1350.0, 2648.0], [1394.0, 4152.0], [1398.0, 2264.0], [1402.0, 2201.3333333333335], [1406.0, 2600.3333333333335], [1414.0, 3489.6], [1410.0, 4449.0], [1418.0, 1993.0], [1438.0, 4031.666666666667], [1434.0, 5053.0], [1430.0, 7900.0], [1426.0, 4977.5], [1458.0, 5301.5], [1462.0, 3733.333333333333], [1466.0, 5415.5], [1422.0, 5123.5], [1442.0, 2962.5714285714284], [1454.0, 3333.75], [1450.0, 4010.142857142857], [1446.0, 3461.6], [1474.0, 7777.0], [1534.0, 7583.0], [1494.0, 7901.0], [1490.0, 7809.0], [1498.0, 4088.0], [1486.0, 8115.0], [1482.0, 8170.0], [1502.0, 4206.0], [1514.0, 5933.0], [1510.0, 7670.0], [1506.0, 8361.0], [1586.0, 4867.0], [1598.0, 3463.0], [1574.0, 8936.0], [1590.0, 8795.0], [1550.0, 8985.5], [1546.0, 7568.0], [1542.0, 9162.0], [1538.0, 8330.0], [1566.0, 8052.0], [1562.0, 5340.0], [1558.0, 8639.0], [1554.0, 8669.0], [1578.0, 8873.0], [1650.0, 3626.0], [1658.0, 7168.0], [1662.0, 8700.0], [1654.0, 8663.0], [1610.0, 5865.0], [1606.0, 9736.0], [1602.0, 5538.0], [1630.0, 836.0], [1626.0, 769.0], [1622.0, 5690.0], [1618.0, 3318.0], [1646.0, 2872.0], [1666.0, 9671.0], [1722.0, 5790.0], [1698.0, 5511.0], [1702.0, 4492.0], [1706.0, 4756.0], [1694.0, 9519.0], [1678.0, 9647.0], [1690.0, 4512.0], [1686.0, 9551.0], [1682.0, 2784.0], [1726.0, 2615.0], [1718.0, 3195.0], [1710.0, 3272.0], [1758.0, 3591.0], [1782.0, 2347.0], [1746.0, 2760.0], [1750.0, 4305.0], [1754.0, 5804.0], [1766.0, 2720.0], [1762.0, 2403.0], [1778.0, 4897.0], [1742.0, 7866.0], [1738.0, 2489.0], [1734.0, 3011.0], [1730.0, 5136.0], [1774.0, 5766.333333333333], [1770.0, 7708.0], [1850.0, 5360.0], [1854.0, 8495.0], [1826.0, 9056.0], [1830.0, 5449.0], [1834.0, 3892.0], [1846.0, 2016.0], [1842.0, 8013.0], [1822.0, 2772.0], [1794.0, 8982.0], [1798.0, 2264.0], [1802.0, 9596.0], [1806.0, 2204.0], [1818.0, 2905.0], [1814.0, 5892.5], [1810.0, 5558.0], [1838.0, 5776.5], [1866.0, 3590.0], [1878.0, 4619.5], [1862.0, 8806.0], [1858.0, 7749.0], [1870.0, 5317.0], [1886.0, 8700.0], [1874.0, 2610.5], [1914.0, 3526.0], [1890.0, 2642.0], [1894.0, 8666.0], [1898.0, 8649.0], [1910.0, 8592.0], [1902.0, 8643.0], [1978.0, 8237.0], [1982.0, 4730.0], [1954.0, 3571.0], [1958.0, 2146.6666666666665], [1974.0, 2048.0], [1970.0, 4819.0], [1950.0, 3590.0], [1922.0, 2408.0], [1926.0, 6517.0], [1930.0, 8485.0], [1934.0, 8433.0], [1946.0, 1886.0], [1942.0, 2214.0], [1938.0, 2210.0], [1966.0, 8388.0], [1962.0, 1803.0], [2038.0, 1508.0], [2034.0, 4416.0], [2046.0, 1021.0], [2018.0, 4557.0], [2026.0, 7813.0], [2042.0, 3565.0], [1990.0, 4614.5], [1986.0, 4713.0], [2014.0, 4599.0], [2010.0, 3784.0], [2006.0, 3846.0], [2002.0, 4602.0], [2030.0, 1547.0], [2060.0, 507.5], [2100.0, 3334.666666666667], [2108.0, 2604.5], [2052.0, 1452.0], [2068.0, 4284.0], [2092.0, 2216.714285714286], [2124.0, 1608.0], [2132.0, 2128.5], [2140.0, 2196.0], [2116.0, 2132.6666666666665], [2172.0, 1826.0], [2164.0, 3916.0], [2148.0, 3044.0], [2076.0, 4273.0], [2196.0, 2640.714285714286], [2292.0, 4686.5], [2236.0, 1699.0], [2228.0, 985.0], [2220.0, 1762.0], [2212.0, 2102.0], [2188.0, 486.0], [2204.0, 737.0], [2244.0, 4370.0], [2252.0, 1627.0], [2260.0, 4606.0], [2268.0, 4874.0], [2300.0, 4849.0], [2316.0, 4109.0], [2308.0, 2352.0], [2324.0, 4027.0], [2332.0, 5497.5], [2356.0, 2941.5], [2348.0, 4318.0], [2340.0, 5202.0], [2364.0, 3614.0], [2372.0, 4797.0], [2420.0, 4075.0], [2380.0, 5216.0], [2548.0, 3354.4722222222217], [2532.0, 2167.1], [2460.0, 3651.3333333333335], [2540.0, 725.0], [2500.0, 3356.571428571429], [2556.0, 2604.5], [2508.0, 3308.0], [2524.0, 3393.0], [2452.0, 1017.5], [2444.0, 2415.0], [2436.0, 3672.0], [2476.0, 1154.0], [2492.0, 2154.5], [2468.0, 1094.0], [2580.0, 2763.0], [2572.0, 2554.0], [2588.0, 931.0], [2564.0, 2121.666666666667], [2596.0, 1979.0], [2612.0, 2092.0], [2604.0, 4008.5], [2069.0, 4291.0], [2149.0, 1789.25], [2165.0, 1676.0], [2077.0, 2430.0], [2061.0, 926.0], [2053.0, 4487.0], [2157.0, 1699.0], [2109.0, 1804.6666666666667], [2093.0, 4631.0], [2085.0, 7689.0], [2117.0, 1753.0], [2125.0, 1831.3333333333333], [2133.0, 944.0], [2141.0, 1314.0], [2101.0, 3172.6666666666665], [2173.0, 1691.8], [2205.0, 2070.0], [2181.0, 3156.5], [2189.0, 3715.0], [2197.0, 3704.0], [2237.0, 578.0], [2221.0, 1740.0], [2301.0, 4794.0], [2245.0, 5347.0], [2253.0, 1601.0], [2285.0, 3959.75], [2277.0, 3581.5], [2269.0, 1816.0], [2365.0, 4027.0], [2357.0, 1468.0], [2349.0, 4649.0], [2341.0, 4932.0], [2309.0, 4251.0], [2317.0, 5438.0], [2325.0, 2926.0], [2333.0, 4262.0], [2429.0, 4082.5], [2421.0, 3600.9375], [2389.0, 3728.0], [2381.0, 4952.0], [2373.0, 4047.0], [2549.0, 2199.5], [2533.0, 2546.0], [2461.0, 4224.5], [2541.0, 2607.0], [2501.0, 2411.0], [2509.0, 1967.0], [2525.0, 1111.0], [2517.0, 2712.5], [2445.0, 471.0], [2469.0, 1828.0], [2477.0, 1143.0], [2437.0, 4585.0], [2565.0, 2775.0000000000005], [2573.0, 2355.4], [2597.0, 2476.5], [2581.0, 2618.5], [2589.0, 4009.6666666666665], [2613.0, 2062.0], [2605.0, 4099.0], [1083.0, 3322.5], [1039.0, 8997.0], [1087.0, 1914.5], [1035.0, 8982.0], [1075.0, 2373.4285714285716], [1079.0, 4026.5], [1071.0, 9704.0], [1063.0, 7276.666666666667], [1067.0, 9717.0], [1059.0, 15530.0], [1055.0, 6118.333333333333], [1051.0, 4447.428571428572], [1047.0, 2958.833333333333], [1043.0, 3266.75], [1031.0, 3681.5], [1027.0, 7364.666666666667], [1139.0, 4832.0], [1103.0, 3592.0], [1123.0, 6425.333333333333], [1127.0, 7524.0], [1131.0, 4715.0], [1135.0, 6180.0], [1115.0, 2228.0], [1111.0, 4017.75], [1107.0, 1907.5], [1143.0, 4451.666666666667], [1147.0, 7567.0], [1151.0, 5700.5], [1099.0, 4105.0], [1095.0, 3181.4], [1091.0, 3301.625], [1119.0, 7575.0], [1159.0, 3621.75], [1211.0, 3039.75], [1155.0, 4802.0], [1183.0, 2947.0], [1179.0, 3759.0], [1175.0, 3838.0], [1171.0, 7948.0], [1163.0, 4898.0], [1167.0, 5785.5], [1203.0, 4367.0], [1207.0, 3473.75], [1215.0, 2898.0], [1199.0, 3689.0], [1195.0, 3639.5], [1191.0, 3994.0], [1187.0, 3551.0], [1247.0, 4018.2], [1219.0, 1868.0], [1239.0, 3476.0], [1235.0, 2233.3333333333335], [1243.0, 3513.25], [1223.0, 2128.6666666666665], [1227.0, 1907.5], [1231.0, 2941.75], [1267.0, 5677.5], [1271.0, 4835.0], [1279.0, 3349.5], [1275.0, 2449.6], [1263.0, 6268.625], [1251.0, 3683.0], [1255.0, 5678.5], [1259.0, 2690.0], [1283.0, 3984.0], [1307.0, 2662.1428571428573], [1303.0, 3907.25], [1311.0, 2351.5], [1287.0, 2485.6666666666665], [1291.0, 2098.25], [1299.0, 2786.25], [1295.0, 1423.875], [1331.0, 4398.5], [1335.0, 3127.6], [1339.0, 4711.5], [1343.0, 1582.0], [1315.0, 4659.5], [1319.0, 4836.0], [1323.0, 3662.5], [1327.0, 2353.0], [1347.0, 3437.0], [1399.0, 3722.4], [1363.0, 4267.5], [1367.0, 4818.5], [1371.0, 3809.25], [1375.0, 1959.0], [1391.0, 2497.181818181818], [1387.0, 2521.8333333333335], [1383.0, 3801.5], [1379.0, 4321.666666666667], [1355.0, 4711.0], [1351.0, 8259.5], [1395.0, 2508.5], [1403.0, 2182.5], [1407.0, 2089.5], [1411.0, 2300.3333333333335], [1459.0, 1959.0], [1443.0, 3519.2], [1439.0, 2337.3333333333335], [1415.0, 2523.0], [1419.0, 6400.5], [1435.0, 7965.0], [1431.0, 4208.5], [1427.0, 1678.0], [1463.0, 5502.5], [1467.0, 7881.0], [1471.0, 1556.5], [1423.0, 5014.0], [1455.0, 5504.0], [1451.0, 1882.3333333333333], [1447.0, 3356.375], [1507.0, 6564.0], [1519.0, 8037.0], [1515.0, 7972.0], [1511.0, 7951.0], [1503.0, 8054.0], [1475.0, 8238.0], [1483.0, 7928.0], [1487.0, 8161.0], [1499.0, 7822.0], [1495.0, 7799.0], [1491.0, 3995.0], [1595.0, 8728.0], [1571.0, 5039.666666666667], [1575.0, 9118.0], [1579.0, 8928.0], [1599.0, 7899.0], [1591.0, 8768.0], [1587.0, 8807.0], [1543.0, 4895.0], [1547.0, 8187.0], [1551.0, 8198.0], [1563.0, 3909.0], [1559.0, 3952.0], [1555.0, 5929.5], [1583.0, 6889.0], [1611.0, 5469.0], [1655.0, 9666.0], [1607.0, 8353.0], [1623.0, 9582.0], [1643.0, 6013.166666666667], [1659.0, 4682.0], [1651.0, 3260.0], [1615.0, 6420.0], [1695.0, 8474.0], [1715.0, 5917.0], [1683.0, 8139.0], [1687.0, 2016.0], [1691.0, 8123.0], [1667.0, 4374.0], [1671.0, 9111.0], [1675.0, 6594.5], [1727.0, 2979.0], [1699.0, 7169.0], [1703.0, 8439.0], [1707.0, 8637.0], [1723.0, 3306.0], [1719.0, 3271.0], [1711.0, 3027.0], [1739.0, 8259.0], [1747.0, 3137.0], [1759.0, 2891.0], [1735.0, 9413.0], [1743.0, 2947.0], [1791.0, 3537.5], [1763.0, 1624.0], [1767.0, 4901.0], [1787.0, 4860.0], [1779.0, 4903.0], [1775.0, 2974.0], [1771.0, 2353.0], [1795.0, 5647.0], [1831.0, 8912.0], [1855.0, 7622.0], [1843.0, 8870.0], [1823.0, 8947.0], [1799.0, 2916.0], [1807.0, 2889.0], [1819.0, 2487.0], [1815.0, 2243.0], [1811.0, 5571.0], [1839.0, 4132.0], [1835.0, 2150.0], [1827.0, 5508.0], [1867.0, 1863.0], [1907.0, 7481.0], [1863.0, 2697.0], [1887.0, 4063.0], [1883.0, 8724.0], [1879.0, 8744.0], [1875.0, 8748.0], [1911.0, 461.0], [1899.0, 8641.5], [1895.0, 2563.0], [1871.0, 3692.0], [1903.0, 2527.0], [1951.0, 5060.285714285715], [1947.0, 2164.0], [1943.0, 1932.0], [1939.0, 2177.0], [1983.0, 4136.0], [1959.0, 2095.0], [1955.0, 7723.0], [1963.0, 2101.0], [1967.0, 2173.0], [1979.0, 8215.0], [1975.0, 4747.0], [1935.0, 8429.0], [1931.0, 8431.0], [1927.0, 8500.0], [1923.0, 2391.0], [2047.0, 3540.0], [2043.0, 4400.0], [2027.0, 4318.0], [2023.0, 3029.5], [2019.0, 1611.0], [2031.0, 4328.0], [2039.0, 4557.0], [2035.0, 4462.0], [1999.0, 1641.0], [1995.0, 3616.333333333333], [1987.0, 3473.0], [2015.0, 477.0], [2011.0, 1274.0], [2003.0, 1299.0], [2174.0, 2821.0], [2054.0, 3060.0], [2110.0, 2337.0], [2062.0, 1165.2857142857144], [2094.0, 5227.999999999999], [2126.0, 3030.5], [2134.0, 1994.6666666666667], [2142.0, 2975.25], [2118.0, 982.5], [2166.0, 2015.0], [2078.0, 4554.0], [2070.0, 4265.0], [2190.0, 4489.0], [2278.0, 4828.0], [2294.0, 2419.5], [2182.0, 4582.0], [2198.0, 3997.0], [2206.0, 3632.0], [2238.0, 1999.0], [2230.0, 3770.0], [2222.0, 633.0], [2214.0, 2832.0], [2254.0, 859.0], [2262.0, 3461.0], [2286.0, 2099.0], [2270.0, 770.0], [2334.0, 2651.0], [2430.0, 4893.0], [2326.0, 3491.5], [2342.0, 4287.0], [2350.0, 4062.0], [2358.0, 3703.0], [2390.0, 3811.5], [2382.0, 2018.0], [2374.0, 5104.0], [2318.0, 1956.0], [2542.0, 3013.75], [2534.0, 3220.75], [2454.0, 493.0], [2462.0, 4187.0], [2550.0, 3863.5], [2558.0, 2896.0], [2502.0, 3947.3333333333335], [2510.0, 2219.0], [2526.0, 3383.6666666666665], [2518.0, 1482.75], [2446.0, 1568.0], [2494.0, 2531.0], [2470.0, 487.0], [2566.0, 2383.5], [2574.0, 2278.0], [2614.0, 917.0], [2582.0, 2217.5714285714284], [2590.0, 4127.0], [2606.0, 987.0], [2598.0, 2168.0], [2159.0, 1796.3333333333333], [2063.0, 2152.333333333333], [2079.0, 1556.0], [2151.0, 922.0], [2111.0, 2501.6], [2095.0, 965.75], [2119.0, 2183.8], [2127.0, 1922.0], [2143.0, 1028.0], [2135.0, 978.0], [2103.0, 618.3333333333334], [2167.0, 1729.0], [2175.0, 3830.0], [2199.0, 3698.0], [2191.0, 3561.0], [2207.0, 661.0], [2239.0, 1997.0], [2223.0, 2159.0], [2215.0, 681.0], [2231.0, 1606.5], [2287.0, 1572.0], [2303.0, 3628.0], [2255.0, 2172.0], [2263.0, 1879.0], [2271.0, 2589.0], [2295.0, 1807.0], [2279.0, 666.0], [2319.0, 5343.0], [2327.0, 1374.25], [2311.0, 4333.5], [2335.0, 4280.0], [2359.0, 1499.75], [2351.0, 4116.0], [2343.0, 4160.0], [2367.0, 2075.0], [2391.0, 4417.0], [2383.0, 4879.0], [2375.0, 4983.0], [2543.0, 1947.0], [2535.0, 3040.166666666667], [2447.0, 1586.0], [2463.0, 607.0], [2551.0, 1599.8], [2559.0, 3771.0], [2503.0, 1237.0], [2511.0, 2569.4], [2519.0, 2814.8], [2527.0, 668.0], [2455.0, 1013.0], [2471.0, 2093.5], [2479.0, 2378.5], [2495.0, 2988.5], [2439.0, 3664.0], [2487.0, 2751.0], [2567.0, 3106.5], [2575.0, 1917.0], [2583.0, 2047.0], [2591.0, 4127.0], [2615.0, 957.0], [2599.0, 1103.0]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}, {"data": [[1362.1924, 6120.336800000003]], "isOverall": false, "label": "Petición HTTP 5000 usuarios-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2618.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2998.233333333333, "minX": 1.64932674E12, "maxY": 687530.1333333333, "series": [{"data": [[1.64932674E12, 687530.1333333333], [1.6493268E12, 231136.53333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64932674E12, 8918.433333333332], [1.6493268E12, 2998.233333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6493268E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3062.8765366114417, "minX": 1.64932674E12, "maxY": 15214.944356120846, "series": [{"data": [[1.64932674E12, 3062.8765366114417], [1.6493268E12, 15214.944356120846]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6493268E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3055.456707642973, "minX": 1.64932674E12, "maxY": 15208.610492845784, "series": [{"data": [[1.64932674E12, 3055.456707642973], [1.6493268E12, 15208.610492845784]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6493268E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2862.6253340459666, "minX": 1.64932674E12, "maxY": 15091.304451510345, "series": [{"data": [[1.64932674E12, 2862.6253340459666], [1.6493268E12, 15091.304451510345]], "isOverall": false, "label": "Petición HTTP 5000 usuarios", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6493268E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 439.0, "minX": 1.64932674E12, "maxY": 21579.0, "series": [{"data": [[1.64932674E12, 10146.0], [1.6493268E12, 21579.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64932674E12, 7650.800000000001], [1.6493268E12, 17778.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64932674E12, 9129.970000000003], [1.6493268E12, 19026.060000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64932674E12, 8158.25], [1.6493268E12, 18181.05]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64932674E12, 439.0], [1.6493268E12, 3444.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64932674E12, 2250.5], [1.6493268E12, 16383.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6493268E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 912.5, "minX": 5.0, "maxY": 21530.0, "series": [{"data": [[40.0, 7642.5], [46.0, 18553.5], [49.0, 7574.0], [52.0, 4865.5], [59.0, 15642.0], [5.0, 21530.0], [85.0, 1632.0], [86.0, 7536.0], [146.0, 912.5], [164.0, 2218.5], [188.0, 3825.0], [194.0, 1590.5], [207.0, 4704.0], [222.0, 3607.5], [230.0, 7880.0], [233.0, 1352.0], [236.0, 5606.0], [258.0, 4057.5], [272.0, 3611.5], [300.0, 16121.0], [296.0, 17218.0], [336.0, 1561.5], [349.0, 16775.0], [414.0, 1811.0], [419.0, 2931.0], [28.0, 15774.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 419.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 884.0, "minX": 5.0, "maxY": 21530.0, "series": [{"data": [[40.0, 7642.5], [46.0, 18537.5], [49.0, 7573.0], [52.0, 4756.0], [59.0, 15642.0], [5.0, 21530.0], [85.0, 1629.0], [86.0, 7536.0], [146.0, 884.0], [164.0, 2201.5], [188.0, 3823.5], [194.0, 1590.0], [207.0, 4704.0], [222.0, 3607.0], [230.0, 7880.0], [233.0, 1350.0], [236.0, 5606.0], [258.0, 4057.5], [272.0, 3611.5], [300.0, 16120.5], [296.0, 17197.0], [336.0, 1553.0], [349.0, 16775.0], [414.0, 1810.5], [419.0, 2893.0], [28.0, 15774.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 419.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.64932674E12, "maxY": 83.33333333333333, "series": [{"data": [[1.64932674E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64932674E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.966666666666665, "minX": 1.64932674E12, "maxY": 62.36666666666667, "series": [{"data": [[1.64932674E12, 62.36666666666667], [1.6493268E12, 20.966666666666665]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6493268E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 20.966666666666665, "minX": 1.64932674E12, "maxY": 62.36666666666667, "series": [{"data": [[1.64932674E12, 62.36666666666667], [1.6493268E12, 20.966666666666665]], "isOverall": false, "label": "Petición HTTP 5000 usuarios-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6493268E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 20.966666666666665, "minX": 1.64932674E12, "maxY": 62.36666666666667, "series": [{"data": [[1.64932674E12, 62.36666666666667], [1.6493268E12, 20.966666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6493268E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

